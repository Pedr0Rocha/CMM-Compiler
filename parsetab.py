
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'NUM PLUS MINUS MULT DIV MOD LPAREN RPAREN LBRAC RBRAC LCBRAC RCBRAC COLON SCOLON COMMA QMARK NOT AND OR GREATER EQUAL LESS ATTR DIFF LESSEQ GREATEQ AVALPLUS AVALMINUS AVALMULT AVALDIV AVALMOD ID STR FUNCTION THEN RETURN STRING FOR INT VOID ELSE BREAK READ WHILE WRITE BOOL FALSE TRUE IFprogram : decSeqdec : varDec\n           | decFunc\n           | decProcdecFunc : type ID LPAREN paramList RPAREN LCBRAC block RCBRACdecFunc : type ID LPAREN error RPAREN LCBRAC block RCBRACdecFunc : type ID LPAREN paramList RPAREN LCBRAC error RCBRACdecProc : ID LPAREN paramList RPAREN LCBRAC block RCBRACvarDec : type varSpecSeq SCOLONvarSpec : ID\n               | ID ATTR literal\n               | ID LBRAC num RBRAC\n               | ID LBRAC num RBRAC ATTR LCBRAC literalSeq RCBRACvarSpecSeq : varSpec COMMA varSpecSeq\n                  | varSpecliteralSeq : literal COMMA literalSeq\n                  | literalparamList : paramSeq\n                 | emptyparam : type ID\n             | type ID LBRAC RBRACblock : varDecList stmtListvarDecList : varDec varDecList\n                  | emptyvar : ID\n           | ID LBRAC exp RBRACexp : exp PLUS exp\n           | exp MINUS exp\n           | exp MULT exp\n           | exp DIV exp\n           | exp MOD exp\n           | exp EQUAL exp\n           | exp DIFF exp\n           | exp LESSEQ exp\n           | exp GREATEQ exp\n           | exp GREATER exp\n           | exp LESS exp\n           | exp AND exp\n           | exp OR exp\n           | NOT exp\n           | exp QMARK exp COLON exp\n           | subCall\n           | var\n           | literal\n           | LPAREN exp RPARENstmt : ifStmt\n            | whileStmt\n            | forStmt\n            | breakStmt\n            | returnStmt\n            | readStmt\n            | writeStmt\n            | assign SCOLON\n            | subCall SCOLONifStmt : IF LPAREN exp RPAREN LCBRAC block RCBRAC\n              | IF LPAREN exp RPAREN LCBRAC block RCBRAC ELSE RCBRAC block LCBRACwhileStmt : WHILE LPAREN exp RPAREN LCBRAC block RCBRACforStmt : FOR LPAREN assign SCOLON exp SCOLON assign RPAREN LCBRAC block RCBRACbreakStmt : BREAK SCOLONreturnStmt : RETURN SCOLON\n                  | RETURN exp SCOLONreturnStmt : RETURN error SCOLONreadStmt : READ var SCOLONwriteStmt : WRITE expList SCOLONassign : var ATTR exp\n              | var AVALPLUS exp\n              | var AVALMINUS exp\n              | var AVALMULT exp\n              | var AVALDIV exp\n              | var AVALMOD expsubCall : ID LPAREN expList RPARENexpList : expSeq\n               | emptyexpSeq : exp COMMA expSeq\n              | expstmtList : stmt stmtList\n                | emptyliteral : num\n               | str\n               | logicnum : NUMstr : STRlogic : TRUE\n             | FALSEtype : INT\n            | STRING\n            | BOOLdecSeq : dec decSeq\n              | decparamSeq : param COMMA paramSeq\n                | paramempty :'
    
_lr_action_items = {'RETURN':([23,43,49,50,53,56,57,58,64,65,69,70,72,75,76,78,86,93,112,113,126,135,137,146,176,178,183,185,188,189,192,193,],[-9,-92,-92,-24,60,-92,-92,-23,-51,-47,-49,60,-50,-52,-46,-48,-60,-54,-59,-53,-61,-62,-63,-64,-92,-92,-57,-55,-92,-92,-58,-56,]),'STR':([26,60,71,81,89,92,96,97,98,99,100,101,102,109,110,111,120,121,122,123,124,125,127,128,129,130,131,132,133,134,147,151,169,175,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'RBRAC':([32,33,36,37,39,40,41,42,45,73,85,87,88,136,149,153,154,155,156,157,159,160,161,162,163,164,165,166,167,171,172,179,],[46,-81,-84,-82,-78,-79,-80,-83,54,-25,-42,-44,-43,-40,172,-45,-38,-36,-35,-37,-32,-39,-34,-27,-33,-30,-28,-29,-31,-71,-26,-41,]),'READ':([23,43,49,50,53,56,57,58,64,65,69,70,72,75,76,78,86,93,112,113,126,135,137,146,176,178,183,185,188,189,192,193,],[-9,-92,-92,-24,62,-92,-92,-23,-51,-47,-49,62,-50,-52,-46,-48,-60,-54,-59,-53,-61,-62,-63,-64,-92,-92,-57,-55,-92,-92,-58,-56,]),'EQUAL':([33,36,37,39,40,41,42,73,85,87,88,90,108,119,136,138,139,140,141,142,143,144,149,150,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,171,172,177,179,],[-81,-84,-82,-78,-79,-80,-83,-25,-42,-44,-43,125,125,125,125,125,125,125,125,125,125,125,125,125,-45,125,125,125,125,125,125,125,125,125,125,125,125,125,125,-71,-26,125,125,]),'SCOLON':([14,15,16,30,31,33,36,37,38,39,40,41,42,46,60,61,71,73,77,80,85,87,88,90,91,94,95,105,106,107,108,136,139,140,141,142,143,144,145,152,153,154,155,156,157,159,160,161,162,163,164,165,166,167,170,171,172,177,179,],[-15,23,-10,-14,-10,-81,-84,-82,-11,-78,-79,-80,-83,-12,86,93,-92,-25,112,113,-42,-44,-43,126,135,137,-25,-72,146,-73,-75,-40,-69,-67,-65,-66,-68,-70,169,-13,-45,-38,-36,-35,-37,-32,-39,-34,-27,-33,-30,-28,-29,-31,-74,-71,-26,181,-41,]),'AVALMULT':([66,73,95,172,],[101,-25,-25,-26,]),'WHILE':([23,43,49,50,53,56,57,58,64,65,69,70,72,75,76,78,86,93,112,113,126,135,137,146,176,178,183,185,188,189,192,193,],[-9,-92,-92,-24,63,-92,-92,-23,-51,-47,-49,63,-50,-52,-46,-48,-60,-54,-59,-53,-61,-62,-63,-64,-92,-92,-57,-55,-92,-92,-58,-56,]),'GREATER':([33,36,37,39,40,41,42,73,85,87,88,90,108,119,136,138,139,140,141,142,143,144,149,150,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,171,172,177,179,],[-81,-84,-82,-78,-79,-80,-83,-25,-42,-44,-43,121,121,121,121,121,121,121,121,121,121,121,121,121,-45,121,121,121,121,121,121,121,121,121,121,121,121,121,121,-71,-26,121,121,]),'DIFF':([33,36,37,39,40,41,42,73,85,87,88,90,108,119,136,138,139,140,141,142,143,144,149,150,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,171,172,177,179,],[-81,-84,-82,-78,-79,-80,-83,-25,-42,-44,-43,130,130,130,130,130,130,130,130,130,130,130,130,130,-45,130,130,130,130,130,130,130,130,130,130,130,130,130,130,-71,-26,130,130,]),'DIV':([33,36,37,39,40,41,42,73,85,87,88,90,108,119,136,138,139,140,141,142,143,144,149,150,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,171,172,177,179,],[-81,-84,-82,-78,-79,-80,-83,-25,-42,-44,-43,131,131,131,131,131,131,131,131,131,131,131,131,131,-45,131,131,131,131,131,131,131,131,131,131,131,131,131,131,-71,-26,131,131,]),'TRUE':([26,60,71,81,89,92,96,97,98,99,100,101,102,109,110,111,120,121,122,123,124,125,127,128,129,130,131,132,133,134,147,151,169,175,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'MINUS':([33,36,37,39,40,41,42,73,85,87,88,90,108,119,136,138,139,140,141,142,143,144,149,150,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,171,172,177,179,],[-81,-84,-82,-78,-79,-80,-83,-25,-42,-44,-43,132,132,132,132,132,132,132,132,132,132,132,132,132,-45,132,132,132,132,132,132,132,132,132,132,132,132,132,132,-71,-26,132,132,]),'MULT':([33,36,37,39,40,41,42,73,85,87,88,90,108,119,136,138,139,140,141,142,143,144,149,150,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,171,172,177,179,],[-81,-84,-82,-78,-79,-80,-83,-25,-42,-44,-43,133,133,133,133,133,133,133,133,133,133,133,133,133,-45,133,133,133,133,133,133,133,133,133,133,133,133,133,133,-71,-26,133,133,]),'AVALMOD':([66,73,95,172,],[102,-25,-25,-26,]),'RPAREN':([12,17,18,19,20,25,29,33,34,35,36,37,39,40,41,42,44,54,73,85,87,88,105,107,108,109,119,136,138,139,140,141,142,143,144,148,150,153,154,155,156,157,159,160,161,162,163,164,165,166,167,170,171,172,179,184,],[-92,-18,27,-91,-19,-92,-20,-81,47,48,-84,-82,-78,-79,-80,-83,-90,-21,-25,-42,-44,-43,-72,-73,-75,-92,153,-40,168,-69,-67,-65,-66,-68,-70,171,173,-45,-38,-36,-35,-37,-32,-39,-34,-27,-33,-30,-28,-29,-31,-74,-71,-26,-41,186,]),'ATTR':([16,31,46,66,73,95,172,],[26,26,55,99,-25,-25,-26,]),'LESS':([33,36,37,39,40,41,42,73,85,87,88,90,108,119,136,138,139,140,141,142,143,144,149,150,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,171,172,177,179,],[-81,-84,-82,-78,-79,-80,-83,-25,-42,-44,-43,123,123,123,123,123,123,123,123,123,123,123,123,123,-45,123,123,123,123,123,123,123,123,123,123,123,123,123,123,-71,-26,123,123,]),'RCBRAC':([23,33,36,37,39,40,41,42,43,49,50,52,53,56,57,58,64,65,67,69,70,72,75,76,78,79,82,83,84,86,93,104,112,113,114,115,126,135,137,146,174,176,178,180,182,183,185,187,188,190,192,193,],[-9,-81,-84,-82,-78,-79,-80,-83,-92,-92,-24,59,-92,-92,-92,-23,-51,-47,-77,-49,-92,-50,-52,-46,-48,-22,116,117,118,-60,-54,-76,-59,-53,-17,152,-61,-62,-63,-64,-16,-92,-92,183,185,-57,-55,189,-92,192,-58,-56,]),'NUM':([24,26,60,71,81,89,92,96,97,98,99,100,101,102,109,110,111,120,121,122,123,124,125,127,128,129,130,131,132,133,134,147,151,169,175,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'COMMA':([14,16,19,29,31,33,36,37,38,39,40,41,42,46,54,73,85,87,88,108,114,136,152,153,154,155,156,157,159,160,161,162,163,164,165,166,167,171,172,179,],[22,-10,28,-20,-10,-81,-84,-82,-11,-78,-79,-80,-83,-12,-21,-25,-42,-44,-43,147,151,-40,-13,-45,-38,-36,-35,-37,-32,-39,-34,-27,-33,-30,-28,-29,-31,-71,-26,-41,]),'COLON':([33,36,37,39,40,41,42,73,85,87,88,136,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,171,172,179,],[-81,-84,-82,-78,-79,-80,-83,-25,-42,-44,-43,-40,-45,-38,-36,-35,-37,175,-32,-39,-34,-27,-33,-30,-28,-29,-31,-71,-26,-41,]),'$end':([1,2,4,6,8,10,13,23,59,116,117,118,],[-2,-4,-1,0,-89,-3,-88,-9,-8,-7,-5,-6,]),'PLUS':([33,36,37,39,40,41,42,73,85,87,88,90,108,119,136,138,139,140,141,142,143,144,149,150,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,171,172,177,179,],[-81,-84,-82,-78,-79,-80,-83,-25,-42,-44,-43,129,129,129,129,129,129,129,129,129,129,129,129,129,-45,129,129,129,129,129,129,129,129,129,129,129,129,129,129,-71,-26,129,129,]),'AVALDIV':([66,73,95,172,],[97,-25,-25,-26,]),'STRING':([0,1,2,8,10,12,23,25,28,43,49,56,57,59,116,117,118,176,178,188,189,],[11,-2,-4,11,-3,11,-9,11,11,11,11,11,11,-8,-7,-5,-6,11,11,11,11,]),'FOR':([23,43,49,50,53,56,57,58,64,65,69,70,72,75,76,78,86,93,112,113,126,135,137,146,176,178,183,185,188,189,192,193,],[-9,-92,-92,-24,68,-92,-92,-23,-51,-47,-49,68,-50,-52,-46,-48,-60,-54,-59,-53,-61,-62,-63,-64,-92,-92,-57,-55,-92,-92,-58,-56,]),'AVALPLUS':([66,73,95,172,],[100,-25,-25,-26,]),'ELSE':([185,],[187,]),'WRITE':([23,43,49,50,53,56,57,58,64,65,69,70,72,75,76,78,86,93,112,113,126,135,137,146,176,178,183,185,188,189,192,193,],[-9,-92,-92,-24,71,-92,-92,-23,-51,-47,-49,71,-50,-52,-46,-48,-60,-54,-59,-53,-61,-62,-63,-64,-92,-92,-57,-55,-92,-92,-58,-56,]),'LPAREN':([5,16,60,63,68,71,73,74,89,92,96,97,98,99,100,101,102,109,110,111,120,121,122,123,124,125,127,128,129,130,131,132,133,134,147,169,175,],[12,25,89,96,103,89,109,111,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'ID':([0,1,2,3,7,8,9,10,11,21,22,23,43,49,50,51,53,56,57,58,59,60,62,64,65,69,70,71,72,75,76,78,86,89,92,93,96,97,98,99,100,101,102,103,109,110,111,112,113,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,146,147,169,175,176,178,181,183,185,188,189,192,193,],[5,-2,-4,-85,-87,5,16,-3,-86,29,31,-9,-92,-92,-24,31,73,-92,-92,-23,-8,73,95,-51,-47,-49,73,73,-50,-52,-46,-48,-60,73,73,-54,73,73,73,73,73,73,73,95,73,73,73,-59,-53,-7,-5,-6,73,73,73,73,73,73,-61,73,73,73,73,73,73,73,73,-62,-63,-64,73,73,73,-92,-92,95,-57,-55,-92,-92,-58,-56,]),'IF':([23,43,49,50,53,56,57,58,64,65,69,70,72,75,76,78,86,93,112,113,126,135,137,146,176,178,183,185,188,189,192,193,],[-9,-92,-92,-24,74,-92,-92,-23,-51,-47,-49,74,-50,-52,-46,-48,-60,-54,-59,-53,-61,-62,-63,-64,-92,-92,-57,-55,-92,-92,-58,-56,]),'AND':([33,36,37,39,40,41,42,73,85,87,88,90,108,119,136,138,139,140,141,142,143,144,149,150,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,171,172,177,179,],[-81,-84,-82,-78,-79,-80,-83,-25,-42,-44,-43,120,120,120,120,120,120,120,120,120,120,120,120,120,-45,120,120,120,120,120,120,120,120,120,120,120,120,120,120,-71,-26,120,120,]),'AVALMINUS':([66,73,95,172,],[98,-25,-25,-26,]),'FALSE':([26,60,71,81,89,92,96,97,98,99,100,101,102,109,110,111,120,121,122,123,124,125,127,128,129,130,131,132,133,134,147,151,169,175,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'LBRAC':([16,29,31,73,95,],[24,45,24,110,110,]),'GREATEQ':([33,36,37,39,40,41,42,73,85,87,88,90,108,119,136,138,139,140,141,142,143,144,149,150,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,171,172,177,179,],[-81,-84,-82,-78,-79,-80,-83,-25,-42,-44,-43,122,122,122,122,122,122,122,122,122,122,122,122,122,-45,122,122,122,122,122,122,122,122,122,122,122,122,122,122,-71,-26,122,122,]),'QMARK':([33,36,37,39,40,41,42,73,85,87,88,90,108,119,136,138,139,140,141,142,143,144,149,150,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,171,172,177,179,],[-81,-84,-82,-78,-79,-80,-83,-25,-42,-44,-43,124,124,124,124,124,124,124,124,124,124,124,124,124,-45,124,124,124,124,124,124,124,124,124,124,124,124,124,124,-71,-26,124,124,]),'INT':([0,1,2,8,10,12,23,25,28,43,49,56,57,59,116,117,118,176,178,188,189,],[3,-2,-4,3,-3,3,-9,3,3,3,3,3,3,-8,-7,-5,-6,3,3,3,3,]),'LCBRAC':([23,27,47,48,49,50,53,55,58,64,65,67,69,70,72,75,76,78,79,86,93,104,112,113,126,135,137,146,168,173,183,185,186,189,191,192,193,],[-9,43,56,57,-92,-24,-92,81,-23,-51,-47,-77,-49,-92,-50,-52,-46,-48,-22,-60,-54,-76,-59,-53,-61,-62,-63,-64,176,178,-57,-55,188,-92,193,-58,-56,]),'BREAK':([23,43,49,50,53,56,57,58,64,65,69,70,72,75,76,78,86,93,112,113,126,135,137,146,176,178,183,185,188,189,192,193,],[-9,-92,-92,-24,77,-92,-92,-23,-51,-47,-49,77,-50,-52,-46,-48,-60,-54,-59,-53,-61,-62,-63,-64,-92,-92,-57,-55,-92,-92,-58,-56,]),'LESSEQ':([33,36,37,39,40,41,42,73,85,87,88,90,108,119,136,138,139,140,141,142,143,144,149,150,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,171,172,177,179,],[-81,-84,-82,-78,-79,-80,-83,-25,-42,-44,-43,128,128,128,128,128,128,128,128,128,128,128,128,128,-45,128,128,128,128,128,128,128,128,128,128,128,128,128,128,-71,-26,128,128,]),'BOOL':([0,1,2,8,10,12,23,25,28,43,49,56,57,59,116,117,118,176,178,188,189,],[7,-2,-4,7,-3,7,-9,7,7,7,7,7,7,-8,-7,-5,-6,7,7,7,7,]),'error':([25,56,60,],[35,82,91,]),'NOT':([60,71,89,92,96,97,98,99,100,101,102,109,110,111,120,121,122,123,124,125,127,128,129,130,131,132,133,134,147,169,175,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'OR':([33,36,37,39,40,41,42,73,85,87,88,90,108,119,136,138,139,140,141,142,143,144,149,150,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,171,172,177,179,],[-81,-84,-82,-78,-79,-80,-83,-25,-42,-44,-43,127,127,127,127,127,127,127,127,127,127,127,127,127,-45,127,127,127,127,127,127,127,127,127,127,127,127,127,127,-71,-26,127,127,]),'MOD':([33,36,37,39,40,41,42,73,85,87,88,90,108,119,136,138,139,140,141,142,143,144,149,150,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,171,172,177,179,],[-81,-84,-82,-78,-79,-80,-83,-25,-42,-44,-43,134,134,134,134,134,134,134,134,134,134,134,134,134,-45,134,134,134,134,134,134,134,134,134,134,134,134,134,134,-71,-26,134,134,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'exp':([60,71,89,92,96,97,98,99,100,101,102,109,110,111,120,121,122,123,124,125,127,128,129,130,131,132,133,134,147,169,175,],[90,108,119,136,138,139,140,141,142,143,144,108,149,150,154,155,156,157,158,159,160,161,162,163,164,165,166,167,108,177,179,]),'subCall':([53,60,70,71,89,92,96,97,98,99,100,101,102,109,110,111,120,121,122,123,124,125,127,128,129,130,131,132,133,134,147,169,175,],[61,85,61,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'decProc':([0,8,],[2,2,]),'num':([24,26,60,71,81,89,92,96,97,98,99,100,101,102,109,110,111,120,121,122,123,124,125,127,128,129,130,131,132,133,134,147,151,169,175,],[32,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'readStmt':([53,70,],[64,64,]),'param':([12,25,28,],[19,19,19,]),'whileStmt':([53,70,],[65,65,]),'literal':([26,60,71,81,89,92,96,97,98,99,100,101,102,109,110,111,120,121,122,123,124,125,127,128,129,130,131,132,133,134,147,151,169,175,],[38,87,87,114,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,114,87,87,]),'program':([0,],[6,]),'expSeq':([71,109,147,],[105,105,170,]),'paramList':([12,25,],[18,34,]),'var':([53,60,62,70,71,89,92,96,97,98,99,100,101,102,103,109,110,111,120,121,122,123,124,125,127,128,129,130,131,132,133,134,147,169,175,181,],[66,88,94,66,88,88,88,88,88,88,88,88,88,88,66,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,66,]),'expList':([71,109,],[106,148,]),'type':([0,8,12,25,28,43,49,56,57,176,178,188,189,],[9,9,21,21,21,51,51,51,51,51,51,51,51,]),'empty':([12,25,43,49,53,56,57,70,71,109,176,178,188,189,],[20,20,50,50,67,50,50,67,107,107,50,50,50,50,]),'paramSeq':([12,25,28,],[17,17,44,]),'decSeq':([0,8,],[4,13,]),'stmtList':([53,70,],[79,104,]),'breakStmt':([53,70,],[69,69,]),'varDec':([0,8,43,49,56,57,176,178,188,189,],[1,1,49,49,49,49,49,49,49,49,]),'stmt':([53,70,],[70,70,]),'varSpec':([9,22,51,],[14,14,14,]),'returnStmt':([53,70,],[72,72,]),'decFunc':([0,8,],[10,10,]),'varDecList':([43,49,56,57,176,178,188,189,],[53,58,53,53,53,53,53,53,]),'writeStmt':([53,70,],[75,75,]),'assign':([53,70,103,181,],[80,80,145,184,]),'forStmt':([53,70,],[78,78,]),'str':([26,60,71,81,89,92,96,97,98,99,100,101,102,109,110,111,120,121,122,123,124,125,127,128,129,130,131,132,133,134,147,151,169,175,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'logic':([26,60,71,81,89,92,96,97,98,99,100,101,102,109,110,111,120,121,122,123,124,125,127,128,129,130,131,132,133,134,147,151,169,175,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'literalSeq':([81,151,],[115,174,]),'varSpecSeq':([9,22,51,],[15,30,15,]),'dec':([0,8,],[8,8,]),'ifStmt':([53,70,],[76,76,]),'block':([43,56,57,176,178,188,189,],[52,83,84,180,182,190,191,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> decSeq','program',1,'p_program','yacc.py',13),
  ('dec -> varDec','dec',1,'p_dec','yacc.py',17),
  ('dec -> decFunc','dec',1,'p_dec','yacc.py',18),
  ('dec -> decProc','dec',1,'p_dec','yacc.py',19),
  ('decFunc -> type ID LPAREN paramList RPAREN LCBRAC block RCBRAC','decFunc',8,'p_decFunc','yacc.py',23),
  ('decFunc -> type ID LPAREN error RPAREN LCBRAC block RCBRAC','decFunc',8,'p_decFunc_error','yacc.py',27),
  ('decFunc -> type ID LPAREN paramList RPAREN LCBRAC error RCBRAC','decFunc',8,'p_decFunc_error2','yacc.py',31),
  ('decProc -> ID LPAREN paramList RPAREN LCBRAC block RCBRAC','decProc',7,'p_decProc','yacc.py',35),
  ('varDec -> type varSpecSeq SCOLON','varDec',3,'p_varDec','yacc.py',39),
  ('varSpec -> ID','varSpec',1,'p_varSpec','yacc.py',43),
  ('varSpec -> ID ATTR literal','varSpec',3,'p_varSpec','yacc.py',44),
  ('varSpec -> ID LBRAC num RBRAC','varSpec',4,'p_varSpec','yacc.py',45),
  ('varSpec -> ID LBRAC num RBRAC ATTR LCBRAC literalSeq RCBRAC','varSpec',8,'p_varSpec','yacc.py',46),
  ('varSpecSeq -> varSpec COMMA varSpecSeq','varSpecSeq',3,'p_varSpecSeq','yacc.py',57),
  ('varSpecSeq -> varSpec','varSpecSeq',1,'p_varSpecSeq','yacc.py',58),
  ('literalSeq -> literal COMMA literalSeq','literalSeq',3,'p_literalSeq','yacc.py',65),
  ('literalSeq -> literal','literalSeq',1,'p_literalSeq','yacc.py',66),
  ('paramList -> paramSeq','paramList',1,'p_paramList','yacc.py',73),
  ('paramList -> empty','paramList',1,'p_paramList','yacc.py',74),
  ('param -> type ID','param',2,'p_param','yacc.py',78),
  ('param -> type ID LBRAC RBRAC','param',4,'p_param','yacc.py',79),
  ('block -> varDecList stmtList','block',2,'p_block','yacc.py',83),
  ('varDecList -> varDec varDecList','varDecList',2,'p_varDecList','yacc.py',87),
  ('varDecList -> empty','varDecList',1,'p_varDecList','yacc.py',88),
  ('var -> ID','var',1,'p_var','yacc.py',95),
  ('var -> ID LBRAC exp RBRAC','var',4,'p_var','yacc.py',96),
  ('exp -> exp PLUS exp','exp',3,'p_exp','yacc.py',103),
  ('exp -> exp MINUS exp','exp',3,'p_exp','yacc.py',104),
  ('exp -> exp MULT exp','exp',3,'p_exp','yacc.py',105),
  ('exp -> exp DIV exp','exp',3,'p_exp','yacc.py',106),
  ('exp -> exp MOD exp','exp',3,'p_exp','yacc.py',107),
  ('exp -> exp EQUAL exp','exp',3,'p_exp','yacc.py',108),
  ('exp -> exp DIFF exp','exp',3,'p_exp','yacc.py',109),
  ('exp -> exp LESSEQ exp','exp',3,'p_exp','yacc.py',110),
  ('exp -> exp GREATEQ exp','exp',3,'p_exp','yacc.py',111),
  ('exp -> exp GREATER exp','exp',3,'p_exp','yacc.py',112),
  ('exp -> exp LESS exp','exp',3,'p_exp','yacc.py',113),
  ('exp -> exp AND exp','exp',3,'p_exp','yacc.py',114),
  ('exp -> exp OR exp','exp',3,'p_exp','yacc.py',115),
  ('exp -> NOT exp','exp',2,'p_exp','yacc.py',116),
  ('exp -> exp QMARK exp COLON exp','exp',5,'p_exp','yacc.py',117),
  ('exp -> subCall','exp',1,'p_exp','yacc.py',118),
  ('exp -> var','exp',1,'p_exp','yacc.py',119),
  ('exp -> literal','exp',1,'p_exp','yacc.py',120),
  ('exp -> LPAREN exp RPAREN','exp',3,'p_exp','yacc.py',121),
  ('stmt -> ifStmt','stmt',1,'p_stmt','yacc.py',136),
  ('stmt -> whileStmt','stmt',1,'p_stmt','yacc.py',137),
  ('stmt -> forStmt','stmt',1,'p_stmt','yacc.py',138),
  ('stmt -> breakStmt','stmt',1,'p_stmt','yacc.py',139),
  ('stmt -> returnStmt','stmt',1,'p_stmt','yacc.py',140),
  ('stmt -> readStmt','stmt',1,'p_stmt','yacc.py',141),
  ('stmt -> writeStmt','stmt',1,'p_stmt','yacc.py',142),
  ('stmt -> assign SCOLON','stmt',2,'p_stmt','yacc.py',143),
  ('stmt -> subCall SCOLON','stmt',2,'p_stmt','yacc.py',144),
  ('ifStmt -> IF LPAREN exp RPAREN LCBRAC block RCBRAC','ifStmt',7,'p_ifStmt','yacc.py',148),
  ('ifStmt -> IF LPAREN exp RPAREN LCBRAC block RCBRAC ELSE RCBRAC block LCBRAC','ifStmt',11,'p_ifStmt','yacc.py',149),
  ('whileStmt -> WHILE LPAREN exp RPAREN LCBRAC block RCBRAC','whileStmt',7,'p_whileStmt','yacc.py',156),
  ('forStmt -> FOR LPAREN assign SCOLON exp SCOLON assign RPAREN LCBRAC block RCBRAC','forStmt',11,'p_forStmt','yacc.py',160),
  ('breakStmt -> BREAK SCOLON','breakStmt',2,'p_breakStmt','yacc.py',164),
  ('returnStmt -> RETURN SCOLON','returnStmt',2,'p_returnStmt','yacc.py',168),
  ('returnStmt -> RETURN exp SCOLON','returnStmt',3,'p_returnStmt','yacc.py',169),
  ('returnStmt -> RETURN error SCOLON','returnStmt',3,'p_returnStmt_error','yacc.py',176),
  ('readStmt -> READ var SCOLON','readStmt',3,'p_readStmt','yacc.py',180),
  ('writeStmt -> WRITE expList SCOLON','writeStmt',3,'p_writeStmt','yacc.py',184),
  ('assign -> var ATTR exp','assign',3,'p_assign','yacc.py',188),
  ('assign -> var AVALPLUS exp','assign',3,'p_assign','yacc.py',189),
  ('assign -> var AVALMINUS exp','assign',3,'p_assign','yacc.py',190),
  ('assign -> var AVALMULT exp','assign',3,'p_assign','yacc.py',191),
  ('assign -> var AVALDIV exp','assign',3,'p_assign','yacc.py',192),
  ('assign -> var AVALMOD exp','assign',3,'p_assign','yacc.py',193),
  ('subCall -> ID LPAREN expList RPAREN','subCall',4,'p_subCall','yacc.py',197),
  ('expList -> expSeq','expList',1,'p_expList','yacc.py',201),
  ('expList -> empty','expList',1,'p_expList','yacc.py',202),
  ('expSeq -> exp COMMA expSeq','expSeq',3,'p_expSeq','yacc.py',206),
  ('expSeq -> exp','expSeq',1,'p_expSeq','yacc.py',207),
  ('stmtList -> stmt stmtList','stmtList',2,'p_stmtList','yacc.py',214),
  ('stmtList -> empty','stmtList',1,'p_stmtList','yacc.py',215),
  ('literal -> num','literal',1,'p_literal','yacc.py',222),
  ('literal -> str','literal',1,'p_literal','yacc.py',223),
  ('literal -> logic','literal',1,'p_literal','yacc.py',224),
  ('num -> NUM','num',1,'p_num','yacc.py',228),
  ('str -> STR','str',1,'p_str','yacc.py',232),
  ('logic -> TRUE','logic',1,'p_logic','yacc.py',236),
  ('logic -> FALSE','logic',1,'p_logic','yacc.py',237),
  ('type -> INT','type',1,'p_type','yacc.py',241),
  ('type -> STRING','type',1,'p_type','yacc.py',242),
  ('type -> BOOL','type',1,'p_type','yacc.py',243),
  ('decSeq -> dec decSeq','decSeq',2,'p_decSeq','yacc.py',247),
  ('decSeq -> dec','decSeq',1,'p_decSeq','yacc.py',248),
  ('paramSeq -> param COMMA paramSeq','paramSeq',3,'p_paramSeq','yacc.py',255),
  ('paramSeq -> param','paramSeq',1,'p_paramSeq','yacc.py',256),
  ('empty -> <empty>','empty',0,'p_empty','yacc.py',263),
]
