Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    THEN
    VOID
    FUNCTION

Grammar

Rule 0     S' -> program
Rule 1     program -> decSeq
Rule 2     dec -> varDec
Rule 3     dec -> decFunc
Rule 4     dec -> decProc
Rule 5     decFunc -> type ID LPAREN paramList RPAREN LCBRAC block RCBRAC
Rule 6     decProc -> ID LPAREN paramList RPAREN LCBRAC block RCBRAC
Rule 7     varDec -> type varSpecSeq SCOLON
Rule 8     varSpec -> ID
Rule 9     varSpec -> ID ATTR literal
Rule 10    varSpec -> ID LBRAC num RBRAC
Rule 11    varSpec -> ID LBRAC num RBRAC ATTR LCBRAC literalSeq RCBRAC
Rule 12    varSpecSeq -> varSpec COMMA varSpecSeq
Rule 13    varSpecSeq -> varSpec
Rule 14    literalSeq -> literal COMMA literalSeq
Rule 15    literalSeq -> literal
Rule 16    paramList -> paramSeq
Rule 17    paramList -> empty
Rule 18    param -> type ID
Rule 19    param -> type ID LBRAC RBRAC
Rule 20    block -> varDecList stmtList
Rule 21    varDecList -> varDecSeq
Rule 22    varDecList -> empty
Rule 23    var -> ID
Rule 24    var -> ID LBRAC exp RBRAC
Rule 25    exp -> binop
Rule 26    exp -> NOT exp
Rule 27    exp -> exp QMARK exp COLON exp
Rule 28    exp -> subCall
Rule 29    exp -> var
Rule 30    exp -> literal
Rule 31    exp -> LPAREN exp RPAREN
Rule 32    binop -> exp PLUS exp
Rule 33    binop -> exp MINUS exp
Rule 34    binop -> exp MULT exp
Rule 35    binop -> exp DIV exp
Rule 36    binop -> exp MOD exp
Rule 37    binop -> exp EQUAL exp
Rule 38    binop -> exp DIFF exp
Rule 39    binop -> exp LESSEQ exp
Rule 40    binop -> exp GREATEQ exp
Rule 41    binop -> exp GREATER exp
Rule 42    binop -> exp LESS exp
Rule 43    binop -> exp AND exp
Rule 44    binop -> exp OR exp
Rule 45    stmt -> ifStmt
Rule 46    stmt -> whileStmt
Rule 47    stmt -> forStmt
Rule 48    stmt -> breakStmt
Rule 49    stmt -> returnStmt
Rule 50    stmt -> readStmt
Rule 51    stmt -> writeStmt
Rule 52    stmt -> assign SCOLON
Rule 53    stmt -> subCall SCOLON
Rule 54    ifStmt -> IF LPAREN exp RPAREN LCBRAC block RCBRAC
Rule 55    ifStmt -> IF LPAREN exp RPAREN LCBRAC block RCBRAC ELSE RCBRAC block LCBRAC
Rule 56    whileStmt -> WHILE LPAREN exp RPAREN LCBRAC block RCBRAC
Rule 57    forStmt -> FOR LPAREN assign SCOLON exp SCOLON assign RPAREN LCBRAC block RCBRAC
Rule 58    breakStmt -> BREAK SCOLON
Rule 59    returnStmt -> RETURN SCOLON
Rule 60    returnStmt -> RETURN exp SCOLON
Rule 61    returnStmt -> RETURN error SCOLON
Rule 62    readStmt -> READ var SCOLON
Rule 63    writeStmt -> WRITE expList SCOLON
Rule 64    assign -> var ATTR exp
Rule 65    assign -> var AVALPLUS exp
Rule 66    assign -> var AVALMINUS exp
Rule 67    assign -> var AVALMULT exp
Rule 68    assign -> var AVALDIV exp
Rule 69    assign -> var AVALMOD exp
Rule 70    subCall -> ID LPAREN expList RPAREN
Rule 71    expList -> expSeq
Rule 72    expList -> empty
Rule 73    expSeq -> exp COMMA expSeq
Rule 74    expSeq -> exp
Rule 75    stmtList -> stmt stmtList
Rule 76    stmtList -> empty
Rule 77    literal -> num
Rule 78    literal -> str
Rule 79    literal -> logic
Rule 80    num -> NUM
Rule 81    str -> STR
Rule 82    logic -> TRUE
Rule 83    logic -> FALSE
Rule 84    type -> INT
Rule 85    type -> STRING
Rule 86    type -> BOOL
Rule 87    decSeq -> dec decSeq
Rule 88    decSeq -> dec
Rule 89    paramSeq -> param COMMA paramSeq
Rule 90    paramSeq -> param
Rule 91    empty -> <empty>

Terminals, with rules where they appear

AND                  : 43
ATTR                 : 9 11 64
AVALDIV              : 68
AVALMINUS            : 66
AVALMOD              : 69
AVALMULT             : 67
AVALPLUS             : 65
BOOL                 : 86
BREAK                : 58
COLON                : 27
COMMA                : 12 14 73 89
DIFF                 : 38
DIV                  : 35
ELSE                 : 55
EQUAL                : 37
FALSE                : 83
FOR                  : 57
FUNCTION             : 
GREATEQ              : 40
GREATER              : 41
ID                   : 5 6 8 9 10 11 18 19 23 24 70
IF                   : 54 55
INT                  : 84
LBRAC                : 10 11 19 24
LCBRAC               : 5 6 11 54 55 55 56 57
LESS                 : 42
LESSEQ               : 39
LPAREN               : 5 6 31 54 55 56 57 70
MINUS                : 33
MOD                  : 36
MULT                 : 34
NOT                  : 26
NUM                  : 80
OR                   : 44
PLUS                 : 32
QMARK                : 27
RBRAC                : 10 11 19 24
RCBRAC               : 5 6 11 54 55 55 56 57
READ                 : 62
RETURN               : 59 60 61
RPAREN               : 5 6 31 54 55 56 57 70
SCOLON               : 7 52 53 57 57 58 59 60 61 62 63
STR                  : 81
STRING               : 85
THEN                 : 
TRUE                 : 82
VOID                 : 
WHILE                : 56
WRITE                : 63
error                : 61

Nonterminals, with rules where they appear

assign               : 52 57 57
binop                : 25
block                : 5 6 54 55 55 56 57
breakStmt            : 48
dec                  : 87 88
decFunc              : 3
decProc              : 4
decSeq               : 1 87
empty                : 17 22 72 76
exp                  : 24 26 27 27 27 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 44 44 54 55 56 57 60 64 65 66 67 68 69 73 74
expList              : 63 70
expSeq               : 71 73
forStmt              : 47
ifStmt               : 45
literal              : 9 14 15 30
literalSeq           : 11 14
logic                : 79
num                  : 10 11 77
param                : 89 90
paramList            : 5 6
paramSeq             : 16 89
program              : 0
readStmt             : 50
returnStmt           : 49
stmt                 : 75
stmtList             : 20 75
str                  : 78
subCall              : 28 53
type                 : 5 7 18 19
var                  : 29 62 64 65 66 67 68 69
varDec               : 2
varDecList           : 20
varDecSeq            : 21
varSpec              : 12 13
varSpecSeq           : 7 12
whileStmt            : 46
writeStmt            : 51

